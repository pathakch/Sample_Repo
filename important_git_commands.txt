1. git diff : compare working tree from staging area.--if working directory and staging area are same it won't return anything
2. git diff --staged : compare staging area to last commit.
3. git checkout -f : match working directory to the last commit 
  (if someone changes something and save but we want to be in the last commit state)
4. git rm <filename> : delete file from staging area, 
   means if we did git commit and then we realize we need to remove this file from thn we use this command.
5. git rm --cached : does the same thing in 4 but do not delete the file , it just remove from staging area.
6. git status -s : provide some more visibility about git status-- do practice and understand this command.
7. touch .gitignore : creates gitignore file :which will be helpful if you do not want some files to be tracked then we can put those 
   files/*.extension_name inside the gitignore , then git will not track those files anymore.
8.   

1. $git branch -v :shows branch name,last commit hash and commit messages
2. $git branch --merged:shows which branches has been merged 
3. $ git branch --no-merged:shows which branches have not been merged
4. $git branch -d branch_name:deletes given branch  
5. $ rm -rf .git:removes .git file from a folder so that the folder will not remain git repository.
6. $ git remote :to check whether we r on remote directory or not 
7. $ git remote -v:to check whether we r on remote directory or not
8. $ git remote add origin https://github.com/pathakch/Sample_Repo.git:

Then Run this command 
ckp43_000@cpc MINGW64 /d/GIT (master)
   $ git remote -v
     origin  https://github.com/pathakch/Sample_Repo.git (fetch)
     origin  https://github.com/pathakch/Sample_Repo.git (push)

9. $ git push origin branch_name(bugfix):pushesh the new branch on remote git repo.
10.$ git push origin bugfix:mybugfix  => will push new branch named bugfix with a different name "mybugfix"
11.$ git push -d origin branch_name :deletes branches from remote  repository
12.$ git merge branch_name :merge other branches with master(give this command when u r on master branch but, not necessary,i think)
 
